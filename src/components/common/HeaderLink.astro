---
interface Props {
  checkActive?: boolean;
  href: string;
  class?: string;
}

const {
  href,
  class: className,
  checkActive = true,
  ...restOfProps
} = Astro.props;

const currentPath = Astro.url.pathname;
const isActive = currentPath === href && checkActive;
---

<a
  href={href}
  class:list={[className, "a-link", isActive && "pointer-events-none"]}
  {...restOfProps}
>
  <div
    class=`nav-link ${isActive && "after:[transform:_scaleX(1)_!important]"}`
  >
    <slot />
  </div>
</a>

<style>
  .a-link {
    padding: 10px 14px;
  }

  .nav-link {
    position: relative;
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: white;
    transition: transform 0.3s ease;
    transform: scaleX(0);
  }

  .a-link:hover .nav-link::after {
    transform: scaleX(1);
  }
</style>
